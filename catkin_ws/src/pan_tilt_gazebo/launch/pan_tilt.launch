<launch>
  
  <!-- The path of the robot URDF description file. -->
  <arg name="bot_model" default="$(find pan_tilt_description)/urdf/pan_tilt.urdf" 
   doc="Xacro or URDF description of robot to spawn inside Gazebo simulation."/>

  <!-- Pass URDF file into Xacro preprocessor and load into ROS parameter server. -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg bot_model)" />
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Gazebo documentation: http://gazebosim.org/tutorials?tut=ros_roslaunch -->
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find pan_tilt_gazebo)/worlds/petrol_station.world"/>
    <!-- more default parameters can be changed here -->
  </include>
  <!-- 
  Spawning URDF robot in Gazebo using its ROS API ('ROS Service Call Spawn' Method): 
    This method uses a small python script called spawn_model to make a service call request 
    to the gazebo_ros ROS node (named simply "gazebo" in the rostopic namespace) 
    to add a custom URDF into Gazebo. The spawn_model script is located within the gazebo_ros package.
    
    If you wish to know what the various args mean below, type:
     'rosrun gazebo_ros spawn_model -h' 
    in your terminal and hit enter to view full documentation. But here's an exerept for convenience:
    -[file|param|database] [<file_name>|<param_name>|<model_name>] 
      source of the model xml or the trimesh file
    -[urdf|sdf|trimesh|gazebo]
      specify incoming xml is urdf, sdf or trimesh format. gazebo arg is deprecated in ROS Hydro
    -model <model_name>
      name of the model to be spawned.
    -z <z in meters> - optional
      initial pose, use 0 if left out

      Remember: Roll is around x, yaw is around z, and pitch is around y!
  -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
        args="-param robot_description
              -urdf
              -y 0.0
              -model pan_tilt" />
</launch>
